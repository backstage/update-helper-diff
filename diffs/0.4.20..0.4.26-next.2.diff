diff --git a/app-config.yaml b/app-config.yaml
index d45e354..2f2a14b 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -26,3 +26,3 @@ backend:
   database:
-    client: sqlite3
+    client: better-sqlite3
     connection: ':memory:'
@@ -69,3 +69,3 @@ catalog:
   rules:
-    - allow: [Component, System, API, Group, User, Resource, Location]
+    - allow: [Component, System, API, Resource, Location]
   locations:
@@ -100,6 +100,2 @@ catalog:
         - allow: [Template]
-    - type: url
-      target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
-      rules:
-        - allow: [Template]
     - type: url
diff --git a/backstage.json b/backstage.json
index 06a76a3..487ac1f 100644
--- a/backstage.json
+++ b/backstage.json
@@ -1,3 +1,3 @@
 {
-  "version": "0.4.20"
+  "version": "1.1.0-next.3"
 }
diff --git a/package.json b/package.json
index 8005020..4d9a715 100644
--- a/package.json
+++ b/package.json
@@ -11,3 +11,3 @@
     "start-backend": "yarn workspace backend start",
-    "build": "lerna run build",
+    "build": "backstage-cli repo build --all",
     "build-image": "yarn workspace backend build-image",
@@ -19,4 +19,4 @@
     "test:all": "lerna run test -- --coverage",
-    "lint": "lerna run lint --since origin/master --",
-    "lint:all": "lerna run lint --",
+    "lint": "backstage-cli repo lint --since origin/master",
+    "lint:all": "backstage-cli repo lint",
     "prettier:check": "prettier --check .",
@@ -32,3 +32,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.14.0",
+    "@backstage/cli": "^0.17.0-next.3",
     "@spotify/prettier-config": "^12.0.0",
@@ -39,2 +39,6 @@
   },
+  "resolutions": {
+    "@types/react": "^17",
+    "@types/react-dom": "^17"
+  },
   "prettier": "@spotify/prettier-config",
diff --git a/packages/README.md b/packages/README.md
new file mode 100644
index 0000000..6327fa0
--- /dev/null
+++ b/packages/README.md
@@ -0,0 +1,9 @@
+# The Packages Folder
+
+This is where your own applications and centrally managed libraries live, each
+in a separate folder of its own.
+
+From the start there's an `app` folder (for the frontend) and a `backend` folder
+(for the Node backend), but you can also add more modules in here that house
+your core additions and adaptations, such as themes, common React component
+libraries, utilities, and similar.
diff --git a/packages/app/.eslintrc.js b/packages/app/.eslintrc.js
index 13573ef..e2a53a6 100644
--- a/packages/app/.eslintrc.js
+++ b/packages/app/.eslintrc.js
@@ -1,3 +1 @@
-module.exports = {
-  extends: [require.resolve('@backstage/cli/config/eslint')],
-};
+module.exports = require('@backstage/cli/config/eslint-factory')(__dirname);
diff --git a/packages/app/package.json b/packages/app/package.json
index 6022dc0..2fa1628 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -5,24 +5,27 @@
   "bundled": true,
+  "backstage": {
+    "role": "frontend"
+  },
   "dependencies": {
-    "@backstage/app-defaults": "^0.1.8",
-    "@backstage/catalog-model": "^0.10.0",
-    "@backstage/cli": "^0.14.0",
-    "@backstage/core-app-api": "^0.5.3",
-    "@backstage/core-components": "^0.8.9",
-    "@backstage/core-plugin-api": "^0.6.1",
-    "@backstage/integration-react": "^0.1.22",
-    "@backstage/plugin-api-docs": "^0.7.3",
-    "@backstage/plugin-catalog": "^0.8.0",
-    "@backstage/plugin-catalog-common": "^0.1.3",
-    "@backstage/plugin-catalog-graph": "^0.2.11",
-    "@backstage/plugin-catalog-import": "^0.8.2",
-    "@backstage/plugin-catalog-react": "^0.6.15",
-    "@backstage/plugin-github-actions": "^0.4.36",
-    "@backstage/plugin-org": "^0.4.3",
-    "@backstage/plugin-permission-react": "^0.3.1",
-    "@backstage/plugin-scaffolder": "^0.12.3",
-    "@backstage/plugin-search": "^0.7.0",
-    "@backstage/plugin-tech-radar": "^0.5.6",
-    "@backstage/plugin-techdocs": "^0.13.4",
-    "@backstage/plugin-user-settings": "^0.3.20",
+    "@backstage/app-defaults": "^1.0.1-next.2",
+    "@backstage/catalog-model": "^1.0.1-next.1",
+    "@backstage/cli": "^0.17.0-next.3",
+    "@backstage/core-app-api": "^1.0.1-next.1",
+    "@backstage/core-components": "^0.9.3-next.2",
+    "@backstage/core-plugin-api": "^1.0.1-next.0",
+    "@backstage/integration-react": "^1.0.1-next.2",
+    "@backstage/plugin-api-docs": "^0.8.4-next.3",
+    "@backstage/plugin-catalog": "^1.1.0-next.3",
+    "@backstage/plugin-catalog-common": "^1.0.1-next.1",
+    "@backstage/plugin-catalog-graph": "^0.2.16-next.3",
+    "@backstage/plugin-catalog-import": "^0.8.7-next.2",
+    "@backstage/plugin-catalog-react": "^1.0.1-next.3",
+    "@backstage/plugin-github-actions": "^0.5.4-next.2",
+    "@backstage/plugin-org": "^0.5.4-next.3",
+    "@backstage/plugin-permission-react": "^0.4.0-next.1",
+    "@backstage/plugin-scaffolder": "^1.1.0-next.3",
+    "@backstage/plugin-search": "^0.7.5-next.1",
+    "@backstage/plugin-tech-radar": "^0.5.11-next.2",
+    "@backstage/plugin-techdocs": "^1.1.0-next.3",
+    "@backstage/plugin-user-settings": "^0.4.3-next.1",
     "@backstage/theme": "^0.2.15",
@@ -38,5 +41,5 @@
   "devDependencies": {
-    "@backstage/test-utils": "^0.2.5",
+    "@backstage/test-utils": "^1.0.1-next.2",
     "@testing-library/jest-dom": "^5.10.1",
-    "@testing-library/react": "^10.4.1",
+    "@testing-library/react": "^12.1.3",
     "@testing-library/user-event": "^12.0.7",
@@ -51,9 +54,9 @@
   "scripts": {
-    "start": "backstage-cli app:serve",
-    "build": "backstage-cli app:build",
-    "clean": "backstage-cli clean",
-    "test": "backstage-cli test",
+    "start": "backstage-cli package start",
+    "build": "backstage-cli package build",
+    "clean": "backstage-cli package clean",
+    "test": "backstage-cli package test",
+    "lint": "backstage-cli package lint",
     "test:e2e": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:dev",
     "test:e2e:ci": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:run",
-    "lint": "backstage-cli lint",
     "cy:dev": "cypress open",
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 9b65186..f4ff424 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -17,3 +17,2 @@ import { TechRadarPage } from '@backstage/plugin-tech-radar';
 import {
-  DefaultTechDocsHome,
   TechDocsIndexPage,
@@ -33,3 +32,3 @@ import { CatalogGraphPage } from '@backstage/plugin-catalog-graph';
 import { PermissionedRoute } from '@backstage/plugin-permission-react';
-import { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common';
+import { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';
 
@@ -67,5 +66,3 @@ const routes = (
     </Route>
-    <Route path="/docs" element={<TechDocsIndexPage />}>
-      <DefaultTechDocsHome />
-    </Route>
+    <Route path="/docs" element={<TechDocsIndexPage />} />
     <Route
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
index a88e725..cd4603e 100644
--- a/packages/app/src/components/search/SearchPage.tsx
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -3,3 +3,3 @@ import { makeStyles, Theme, Grid, List, Paper } from '@material-ui/core';
 
-import { CatalogResultListItem } from '@backstage/plugin-catalog';
+import { CatalogSearchResultListItem } from '@backstage/plugin-catalog';
 import {
@@ -8,3 +8,3 @@ import {
 } from '@backstage/plugin-catalog-react';
-import { DocsResultListItem } from '@backstage/plugin-techdocs';
+import { TechDocsSearchResultListItem } from '@backstage/plugin-techdocs';
 
@@ -118,3 +118,3 @@ const SearchPage = () => {
                         return (
-                          <CatalogResultListItem
+                          <CatalogSearchResultListItem
                             key={document.location}
@@ -125,3 +125,3 @@ const SearchPage = () => {
                         return (
-                          <DocsResultListItem
+                          <TechDocsSearchResultListItem
                             key={document.location}
diff --git a/packages/backend/.eslintrc.js b/packages/backend/.eslintrc.js
index 16a033d..e2a53a6 100644
--- a/packages/backend/.eslintrc.js
+++ b/packages/backend/.eslintrc.js
@@ -1,3 +1 @@
-module.exports = {
-  extends: [require.resolve('@backstage/cli/config/eslint.backend')],
-};
+module.exports = require('@backstage/cli/config/eslint-factory')(__dirname);
diff --git a/packages/backend/Dockerfile b/packages/backend/Dockerfile
index 31231a3..dd35d4d 100644
--- a/packages/backend/Dockerfile
+++ b/packages/backend/Dockerfile
@@ -11,3 +11,3 @@
 
-FROM node:14-buster-slim
+FROM node:16-bullseye-slim
 
@@ -21,2 +21,8 @@ RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz
 
+# install sqlite3 dependencies
+RUN apt-get update && \
+    apt-get install -y libsqlite3-dev python3 cmake g++ && \
+    rm -rf /var/lib/apt/lists/* && \
+    yarn config set python /usr/bin/python3
+
 RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -rf "$(yarn cache dir)"
diff --git a/packages/backend/package.json b/packages/backend/package.json
index f018d52..f8815ef 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -6,10 +6,12 @@
   "private": true,
+  "backstage": {
+    "role": "backend"
+  },
   "scripts": {
-    "build": "backstage-cli backend:bundle",
-    "build-image": "docker build ../.. -f Dockerfile --tag backstage",
-    "start": "backstage-cli backend:dev",
-    "lint": "backstage-cli lint",
-    "test": "backstage-cli test",
-    "clean": "backstage-cli clean",
-    "migrate:create": "knex migrate:make -x ts"
+    "start": "backstage-cli package start",
+    "build": "backstage-cli package build",
+    "lint": "backstage-cli package lint",
+    "test": "backstage-cli package test",
+    "clean": "backstage-cli package clean",
+    "build-image": "docker build ../.. -f Dockerfile --tag backstage"
   },
@@ -17,19 +19,17 @@
     "app": "link:../app",
-    "@backstage/backend-common": "^0.10.8",
-    "@backstage/backend-tasks": "^0.1.7",
-    "@backstage/catalog-model": "^0.10.0",
-    "@backstage/catalog-client": "^0.7.0",
-    "@backstage/config": "^0.1.14",
-    "@backstage/plugin-app-backend": "^0.3.25",
-    "@backstage/plugin-auth-backend": "^0.10.1",
-    "@backstage/plugin-catalog-backend": "^0.21.4",
-    "@backstage/plugin-permission-common": "^0.5.0",
-    "@backstage/plugin-permission-node": "^0.5.0",
-    "@backstage/plugin-proxy-backend": "^0.2.19",
-    "@backstage/plugin-scaffolder-backend": "^0.16.0",
-    "@backstage/plugin-search-backend": "^0.4.3",
-    "@backstage/plugin-search-backend-node": "^0.4.6",
-    "@backstage/plugin-techdocs-backend": "^0.13.4",
-    "@gitbeaker/node": "^34.6.0",
-    "@octokit/rest": "^18.5.3",
+    "@backstage/backend-common": "^0.13.2-next.2",
+    "@backstage/backend-tasks": "^0.3.0-next.2",
+    "@backstage/catalog-model": "^1.0.1-next.1",
+    "@backstage/catalog-client": "^1.0.1-next.0",
+    "@backstage/config": "^1.0.0",
+    "@backstage/plugin-app-backend": "^0.3.31-next.1",
+    "@backstage/plugin-auth-backend": "^0.13.0-next.2",
+    "@backstage/plugin-catalog-backend": "^1.1.0-next.3",
+    "@backstage/plugin-permission-common": "^0.6.0-next.1",
+    "@backstage/plugin-permission-node": "^0.6.0-next.2",
+    "@backstage/plugin-proxy-backend": "^0.2.25-next.0",
+    "@backstage/plugin-scaffolder-backend": "^1.1.0-next.2",
+    "@backstage/plugin-search-backend": "^0.5.0-next.2",
+    "@backstage/plugin-search-backend-node": "^0.6.0-next.1",
+    "@backstage/plugin-techdocs-backend": "^1.1.0-next.2",
     "dockerode": "^3.3.1",
@@ -37,4 +37,4 @@
     "express-promise-router": "^4.1.0",
-    "knex": "^0.21.6",
-    "@vscode/sqlite3": "^5.0.7",
+    "luxon": "^2.0.2",
+    "better-sqlite3": "^7.5.0",
     "winston": "^3.2.1"
@@ -42,6 +42,7 @@
   "devDependencies": {
-    "@backstage/cli": "^0.14.0",
+    "@backstage/cli": "^0.17.0-next.3",
     "@types/dockerode": "^3.3.0",
     "@types/express": "^4.17.6",
-    "@types/express-serve-static-core": "^4.17.5"
+    "@types/express-serve-static-core": "^4.17.5",
+    "@types/luxon": "^2.0.4"
   },
diff --git a/packages/backend/src/plugins/app.ts b/packages/backend/src/plugins/app.ts
index 14e19a1..7c37f68 100644
--- a/packages/backend/src/plugins/app.ts
+++ b/packages/backend/src/plugins/app.ts
@@ -4,11 +4,9 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  database,
-}: PluginEnvironment): Promise<Router> {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   return await createRouter({
-    logger,
-    config,
-    database,
+    logger: env.logger,
+    config: env.config,
+    database: env.database,
     appPackageName: 'app',
diff --git a/packages/backend/src/plugins/auth.ts b/packages/backend/src/plugins/auth.ts
index 015c864..1476e66 100644
--- a/packages/backend/src/plugins/auth.ts
+++ b/packages/backend/src/plugins/auth.ts
@@ -4,15 +4,11 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  database,
-  config,
-  discovery,
-  tokenManager,
-}: PluginEnvironment): Promise<Router> {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   return await createRouter({
-    logger,
-    config,
-    database,
-    discovery,
-    tokenManager,
+    logger: env.logger,
+    config: env.config,
+    database: env.database,
+    discovery: env.discovery,
+    tokenManager: env.tokenManager,
   });
diff --git a/packages/backend/src/plugins/proxy.ts b/packages/backend/src/plugins/proxy.ts
index 506f6d9..54ec393 100644
--- a/packages/backend/src/plugins/proxy.ts
+++ b/packages/backend/src/plugins/proxy.ts
@@ -4,8 +4,10 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  discovery,
-}: PluginEnvironment): Promise<Router> {
-  return await createRouter({ logger, config, discovery });
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
+  return await createRouter({
+    logger: env.logger,
+    config: env.config,
+    discovery: env.discovery,
+  });
 }
diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
index 6be2e97..7ce5fcf 100644
--- a/packages/backend/src/plugins/scaffolder.ts
+++ b/packages/backend/src/plugins/scaffolder.ts
@@ -1,5 +1,3 @@
-import { DockerContainerRunner } from '@backstage/backend-common';
 import { CatalogClient } from '@backstage/catalog-client';
 import { createRouter } from '@backstage/plugin-scaffolder-backend';
-import Docker from 'dockerode';
 import { Router } from 'express';
@@ -7,20 +5,15 @@ import type { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  database,
-  reader,
-  discovery,
-}: PluginEnvironment): Promise<Router> {
-  const dockerClient = new Docker();
-  const containerRunner = new DockerContainerRunner({ dockerClient });
-  const catalogClient = new CatalogClient({ discoveryApi: discovery });
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
+  const catalogClient = new CatalogClient({
+    discoveryApi: env.discovery,
+  });
 
   return await createRouter({
-    containerRunner,
-    logger,
-    config,
-    database,
+    logger: env.logger,
+    config: env.config,
+    database: env.database,
+    reader: env.reader,
     catalogClient,
-    reader,
   });
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
index a0a1cc3..27c42fc 100644
--- a/packages/backend/src/plugins/search.ts
+++ b/packages/backend/src/plugins/search.ts
@@ -7,15 +7,26 @@ import {
 import { PluginEnvironment } from '../types';
-import { DefaultCatalogCollator } from '@backstage/plugin-catalog-backend';
-import { DefaultTechDocsCollator } from '@backstage/plugin-techdocs-backend';
+import { DefaultCatalogCollatorFactory } from '@backstage/plugin-catalog-backend';
+import { DefaultTechDocsCollatorFactory } from '@backstage/plugin-techdocs-backend';
+import { Router } from 'express';
+import { Duration } from 'luxon';
 
-export default async function createPlugin({
-  logger,
-  permissions,
-  discovery,
-  config,
-  tokenManager,
-}: PluginEnvironment) {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   // Initialize a connection to a search engine.
-  const searchEngine = new LunrSearchEngine({ logger });
-  const indexBuilder = new IndexBuilder({ logger, searchEngine });
+  const searchEngine = new LunrSearchEngine({
+    logger: env.logger,
+  });
+  const indexBuilder = new IndexBuilder({
+    logger: env.logger,
+    searchEngine,
+  });
+
+  const schedule = env.scheduler.createScheduledTaskRunner({
+    frequency: Duration.fromObject({ minutes: 10 }),
+    timeout: Duration.fromObject({ minutes: 15 }),
+    // A 3 second delay gives the backend server a chance to initialize before
+    // any collators are executed, which may attempt requests against the API.
+    initialDelay: Duration.fromObject({ seconds: 3 }),
+  });
 
@@ -24,6 +35,6 @@ export default async function createPlugin({
   indexBuilder.addCollator({
-    defaultRefreshIntervalSeconds: 600,
-    collator: DefaultCatalogCollator.fromConfig(config, {
-      discovery,
-      tokenManager,
+    schedule,
+    factory: DefaultCatalogCollatorFactory.fromConfig(env.config, {
+      discovery: env.discovery,
+      tokenManager: env.tokenManager,
     }),
@@ -33,7 +44,7 @@ export default async function createPlugin({
   indexBuilder.addCollator({
-    defaultRefreshIntervalSeconds: 600,
-    collator: DefaultTechDocsCollator.fromConfig(config, {
-      discovery,
-      logger,
-      tokenManager,
+    schedule,
+    factory: DefaultTechDocsCollatorFactory.fromConfig(env.config, {
+      discovery: env.discovery,
+      logger: env.logger,
+      tokenManager: env.tokenManager,
     }),
@@ -44,6 +55,4 @@ export default async function createPlugin({
   const { scheduler } = await indexBuilder.build();
+  scheduler.start();
 
-  // A 3 second delay gives the backend server a chance to initialize before
-  // any collators are executed, which may attempt requests against the API.
-  setTimeout(() => scheduler.start(), 3000);
   useHotCleanup(module, () => scheduler.stop());
@@ -53,5 +62,5 @@ export default async function createPlugin({
     types: indexBuilder.getDocumentTypes(),
-    permissions,
-    config,
-    logger,
+    permissions: env.permissions,
+    config: env.config,
+    logger: env.logger,
   });
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index 054c64d..be8bb0c 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -11,13 +11,9 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  discovery,
-  reader,
-  cache,
-}: PluginEnvironment): Promise<Router> {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   // Preparers are responsible for fetching source files for documentation.
-  const preparers = await Preparers.fromConfig(config, {
-    logger,
-    reader,
+  const preparers = await Preparers.fromConfig(env.config, {
+    logger: env.logger,
+    reader: env.reader,
   });
@@ -29,4 +25,4 @@ export default async function createPlugin({
   // Generators are used for generating documentation sites.
-  const generators = await Generators.fromConfig(config, {
-    logger,
+  const generators = await Generators.fromConfig(env.config, {
+    logger: env.logger,
     containerRunner,
@@ -37,5 +33,5 @@ export default async function createPlugin({
   // 2. Fetching files from storage and passing them to TechDocs frontend.
-  const publisher = await Publisher.fromConfig(config, {
-    logger,
-    discovery,
+  const publisher = await Publisher.fromConfig(env.config, {
+    logger: env.logger,
+    discovery: env.discovery,
   });
@@ -49,6 +45,6 @@ export default async function createPlugin({
     publisher,
-    logger,
-    config,
-    discovery,
-    cache,
+    logger: env.logger,
+    config: env.config,
+    discovery: env.discovery,
+    cache: env.cache,
   });
diff --git a/packages/backend/src/types.ts b/packages/backend/src/types.ts
index 0862b0e..8e0a864 100644
--- a/packages/backend/src/types.ts
+++ b/packages/backend/src/types.ts
@@ -10,3 +10,3 @@ import {
 import { PluginTaskScheduler } from '@backstage/backend-tasks';
-import { PermissionAuthorizer } from '@backstage/plugin-permission-common';
+import { PermissionEvaluator } from '@backstage/plugin-permission-common';
 
@@ -21,3 +21,3 @@ export type PluginEnvironment = {
   scheduler: PluginTaskScheduler;
-  permissions: PermissionAuthorizer;
+  permissions: PermissionEvaluator;
 };
diff --git a/plugins/README.md b/plugins/README.md
new file mode 100644
index 0000000..58dc32c
--- /dev/null
+++ b/plugins/README.md
@@ -0,0 +1,9 @@
+# The Plugins Folder
+
+This is where your own plugins and their associated modules live, each in a
+separate folder of its own.
+
+If you want to create a new plugin here, go to your project root directory, run
+the command `yarn backstage-cli create`, and follow the on-screen instructions.
+
+You can also check out existing plugins on [the plugin marketplace](https://backstage.io/plugins)!
