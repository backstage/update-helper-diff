diff --git a/app-config.yaml b/app-config.yaml
index 1a622a2..e7732cf 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -9,3 +9,4 @@ backend:
   # Used for enabling authentication, secret is shared by all backend plugins
-  # See backend-to-backend-auth.md in the docs for information on the format
+  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
+  # information on the format
   # auth:
@@ -25,3 +26,3 @@ backend:
   database:
-    client: sqlite3
+    client: better-sqlite3
     connection: ':memory:'
@@ -64,2 +65,5 @@ scaffolder:
 catalog:
+  import:
+    entityFilename: catalog-info.yaml
+    pullRequestBranchName: backstage-integration
   rules:
@@ -96,6 +100,2 @@ catalog:
         - allow: [Template]
-    - type: url
-      target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
-      rules:
-        - allow: [Template]
     - type: url
diff --git a/backstage.json b/backstage.json
index da31324..1587a66 100644
--- a/backstage.json
+++ b/backstage.json
@@ -1,3 +1,3 @@
 {
-  "version": "0.4.10"
+  "version": "1.0.0"
 }
diff --git a/package.json b/package.json
index f423117..b5fadf8 100644
--- a/package.json
+++ b/package.json
@@ -11,3 +11,3 @@
     "start-backend": "yarn workspace backend start",
-    "build": "lerna run build",
+    "build": "backstage-cli repo build --all",
     "build-image": "yarn workspace backend build-image",
@@ -19,4 +19,4 @@
     "test:all": "lerna run test -- --coverage",
-    "lint": "lerna run lint --since origin/master --",
-    "lint:all": "lerna run lint --",
+    "lint": "backstage-cli repo lint --since origin/master",
+    "lint:all": "backstage-cli repo lint",
     "prettier:check": "prettier --check .",
@@ -32,3 +32,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.10.4",
+    "@backstage/cli": "^0.16.0",
     "@spotify/prettier-config": "^12.0.0",
@@ -36,3 +36,4 @@
     "lerna": "^4.0.0",
-    "prettier": "^2.3.2"
+    "prettier": "^2.3.2",
+    "typescript": "~4.5.4"
   },
diff --git a/packages/app/.eslintrc.js b/packages/app/.eslintrc.js
index 13573ef..e2a53a6 100644
--- a/packages/app/.eslintrc.js
+++ b/packages/app/.eslintrc.js
@@ -1,3 +1 @@
-module.exports = {
-  extends: [require.resolve('@backstage/cli/config/eslint')],
-};
+module.exports = require('@backstage/cli/config/eslint-factory')(__dirname);
diff --git a/packages/app/package.json b/packages/app/package.json
index 9b9ea2f..0cfef69 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -5,22 +5,28 @@
   "bundled": true,
+  "backstage": {
+    "role": "frontend"
+  },
   "dependencies": {
-    "@backstage/app-defaults": "^0.1.3",
-    "@backstage/catalog-model": "^0.9.8",
-    "@backstage/cli": "^0.10.4",
-    "@backstage/core-app-api": "^0.3.0",
-    "@backstage/core-components": "^0.8.2",
-    "@backstage/core-plugin-api": "^0.4.0",
-    "@backstage/integration-react": "^0.1.17",
-    "@backstage/plugin-api-docs": "^0.6.20",
-    "@backstage/plugin-catalog": "^0.7.6",
-    "@backstage/plugin-catalog-import": "^0.7.7",
-    "@backstage/plugin-catalog-react": "^0.6.9",
-    "@backstage/plugin-github-actions": "^0.4.29",
-    "@backstage/plugin-org": "^0.3.32",
-    "@backstage/plugin-scaffolder": "^0.11.16",
-    "@backstage/plugin-search": "^0.5.3",
-    "@backstage/plugin-tech-radar": "^0.5.0",
-    "@backstage/plugin-techdocs": "^0.12.12",
-    "@backstage/plugin-user-settings": "^0.3.14",
-    "@backstage/theme": "^0.2.14",
+    "@backstage/app-defaults": "^1.0.0",
+    "@backstage/catalog-model": "^1.0.0",
+    "@backstage/cli": "^0.16.0",
+    "@backstage/core-app-api": "^1.0.0",
+    "@backstage/core-components": "^0.9.2",
+    "@backstage/core-plugin-api": "^1.0.0",
+    "@backstage/integration-react": "^1.0.0",
+    "@backstage/plugin-api-docs": "^0.8.3",
+    "@backstage/plugin-catalog": "^1.0.0",
+    "@backstage/plugin-catalog-common": "^1.0.0",
+    "@backstage/plugin-catalog-graph": "^0.2.15",
+    "@backstage/plugin-catalog-import": "^0.8.6",
+    "@backstage/plugin-catalog-react": "^1.0.0",
+    "@backstage/plugin-github-actions": "^0.5.3",
+    "@backstage/plugin-org": "^0.5.3",
+    "@backstage/plugin-permission-react": "^0.3.4",
+    "@backstage/plugin-scaffolder": "^1.0.0",
+    "@backstage/plugin-search": "^0.7.4",
+    "@backstage/plugin-tech-radar": "^0.5.10",
+    "@backstage/plugin-techdocs": "^1.0.0",
+    "@backstage/plugin-user-settings": "^0.4.2",
+    "@backstage/theme": "^0.2.15",
     "@material-ui/core": "^4.12.2",
@@ -28,4 +34,4 @@
     "history": "^5.0.0",
-    "react": "^16.13.1",
-    "react-dom": "^16.13.1",
+    "react": "^17.0.2",
+    "react-dom": "^17.0.2",
     "react-router": "6.0.0-beta.0",
@@ -35,5 +41,5 @@
   "devDependencies": {
-    "@backstage/test-utils": "^0.2.1",
+    "@backstage/test-utils": "^1.0.0",
     "@testing-library/jest-dom": "^5.10.1",
-    "@testing-library/react": "^10.4.1",
+    "@testing-library/react": "^12.1.3",
     "@testing-library/user-event": "^12.0.7",
@@ -48,9 +54,9 @@
   "scripts": {
-    "start": "backstage-cli app:serve",
-    "build": "backstage-cli app:build",
-    "clean": "backstage-cli clean",
-    "test": "backstage-cli test",
+    "start": "backstage-cli package start",
+    "build": "backstage-cli package build",
+    "clean": "backstage-cli package clean",
+    "test": "backstage-cli package test",
+    "lint": "backstage-cli package lint",
     "test:e2e": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:dev",
     "test:e2e:ci": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:run",
-    "lint": "backstage-cli lint",
     "cy:dev": "cypress open",
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 8a53583..f4ff424 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -13,2 +13,3 @@ import {
 import { ScaffolderPage, scaffolderPlugin } from '@backstage/plugin-scaffolder';
+import { orgPlugin } from '@backstage/plugin-org';
 import { SearchPage } from '@backstage/plugin-search';
@@ -16,3 +17,2 @@ import { TechRadarPage } from '@backstage/plugin-tech-radar';
 import {
-  DefaultTechDocsHome,
   TechDocsIndexPage,
@@ -30,2 +30,5 @@ import { createApp } from '@backstage/app-defaults';
 import { FlatRoutes } from '@backstage/core-app-api';
+import { CatalogGraphPage } from '@backstage/plugin-catalog-graph';
+import { PermissionedRoute } from '@backstage/plugin-permission-react';
+import { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';
 
@@ -39,3 +42,3 @@ const app = createApp({
     bind(apiDocsPlugin.externalRoutes, {
-      createComponent: scaffolderPlugin.routes.root,
+      registerApi: catalogImportPlugin.routes.importPage,
     });
@@ -44,2 +47,5 @@ const app = createApp({
     });
+    bind(orgPlugin.externalRoutes, {
+      catalogIndex: catalogPlugin.routes.catalogIndex,
+    });
   },
@@ -60,5 +66,3 @@ const routes = (
     </Route>
-    <Route path="/docs" element={<TechDocsIndexPage />}>
-      <DefaultTechDocsHome />
-    </Route>
+    <Route path="/docs" element={<TechDocsIndexPage />} />
     <Route
@@ -73,3 +77,7 @@ const routes = (
     />
-    <Route path="/catalog-import" element={<CatalogImportPage />} />
+    <PermissionedRoute
+      path="/catalog-import"
+      permission={catalogEntityCreatePermission}
+      element={<CatalogImportPage />}
+    />
     <Route path="/search" element={<SearchPage />}>
@@ -78,2 +86,3 @@ const routes = (
     <Route path="/settings" element={<UserSettingsPage />} />
+    <Route path="/catalog-graph" element={<CatalogGraphPage />} />
   </FlatRoutes>
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index b4fa04f..90738c4 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -26,17 +26,20 @@ import LogoIcon from './LogoIcon';
 import { NavLink } from 'react-router-dom';
-import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
 import {
-  SidebarSearchModal,
-  SearchContextProvider,
-} from '@backstage/plugin-search';
+  Settings as SidebarSettings,
+  UserSettingsSignInAvatar,
+} from '@backstage/plugin-user-settings';
+import { SidebarSearchModal } from '@backstage/plugin-search';
 import {
   Sidebar,
-  SidebarPage,
   sidebarConfig,
   SidebarContext,
-  SidebarItem,
   SidebarDivider,
-  SidebarSpace,
+  SidebarGroup,
+  SidebarItem,
+  SidebarPage,
   SidebarScrollWrapper,
+  SidebarSpace,
 } from '@backstage/core-components';
+import MenuIcon from '@material-ui/icons/Menu';
+import SearchIcon from '@material-ui/icons/Search';
 
@@ -79,19 +82,27 @@ export const Root = ({ children }: PropsWithChildren<{}>) => (
       <SidebarLogo />
-      <SearchContextProvider>
+      <SidebarGroup label="Search" icon={<SearchIcon />} to="/search">
         <SidebarSearchModal />
-      </SearchContextProvider>
+      </SidebarGroup>
       <SidebarDivider />
-      {/* Global nav, not org-specific */}
-      <SidebarItem icon={HomeIcon} to="catalog" text="Home" />
-      <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
-      <SidebarItem icon={LibraryBooks} to="docs" text="Docs" />
-      <SidebarItem icon={CreateComponentIcon} to="create" text="Create..." />
-      {/* End global nav */}
-      <SidebarDivider />
-      <SidebarScrollWrapper>
-        <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
-      </SidebarScrollWrapper>
+      <SidebarGroup label="Menu" icon={<MenuIcon />}>
+        {/* Global nav, not org-specific */}
+        <SidebarItem icon={HomeIcon} to="catalog" text="Home" />
+        <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
+        <SidebarItem icon={LibraryBooks} to="docs" text="Docs" />
+        <SidebarItem icon={CreateComponentIcon} to="create" text="Create..." />
+        {/* End global nav */}
+        <SidebarDivider />
+        <SidebarScrollWrapper>
+          <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
+        </SidebarScrollWrapper>
+      </SidebarGroup>
       <SidebarSpace />
       <SidebarDivider />
-      <SidebarSettings />
+      <SidebarGroup
+        label="Settings"
+        icon={<UserSettingsSignInAvatar />}
+        to="/settings"
+      >
+        <SidebarSettings />
+      </SidebarGroup>
     </Sidebar>
diff --git a/packages/app/src/components/catalog/EntityPage.tsx b/packages/app/src/components/catalog/EntityPage.tsx
index d3b4b78..84d0944 100644
--- a/packages/app/src/components/catalog/EntityPage.tsx
+++ b/packages/app/src/components/catalog/EntityPage.tsx
@@ -29,3 +29,2 @@ import {
   EntityDependsOnResourcesCard,
-  EntitySystemDiagramCard,
   EntityHasComponentsCard,
@@ -56,2 +55,16 @@ import { EntityTechdocsContent } from '@backstage/plugin-techdocs';
 import { EmptyState } from '@backstage/core-components';
+import {
+  Direction,
+  EntityCatalogGraphCard,
+} from '@backstage/plugin-catalog-graph';
+import {
+  RELATION_API_CONSUMED_BY,
+  RELATION_API_PROVIDED_BY,
+  RELATION_CONSUMES_API,
+  RELATION_DEPENDENCY_OF,
+  RELATION_DEPENDS_ON,
+  RELATION_HAS_PART,
+  RELATION_PART_OF,
+  RELATION_PROVIDES_API,
+} from '@backstage/catalog-model';
 
@@ -110,2 +123,6 @@ const overviewContent = (
     </Grid>
+    <Grid item md={6} xs={12}>
+      <EntityCatalogGraphCard variant="gridItem" height={400} />
+    </Grid>
+
     <Grid item md={4} xs={12}>
@@ -225,2 +242,5 @@ const apiPage = (
         </Grid>
+        <Grid item md={6} xs={12}>
+          <EntityCatalogGraphCard variant="gridItem" height={400} />
+        </Grid>
         <Grid item md={4} xs={12}>
@@ -292,2 +312,5 @@ const systemPage = (
         </Grid>
+        <Grid item md={6} xs={12}>
+          <EntityCatalogGraphCard variant="gridItem" height={400} />
+        </Grid>
         <Grid item md={6}>
@@ -304,3 +327,19 @@ const systemPage = (
     <EntityLayout.Route path="/diagram" title="Diagram">
-      <EntitySystemDiagramCard />
+      <EntityCatalogGraphCard
+        variant="gridItem"
+        direction={Direction.TOP_BOTTOM}
+        title="System Diagram"
+        height={700}
+        relations={[
+          RELATION_PART_OF,
+          RELATION_HAS_PART,
+          RELATION_API_CONSUMED_BY,
+          RELATION_API_PROVIDED_BY,
+          RELATION_CONSUMES_API,
+          RELATION_PROVIDES_API,
+          RELATION_DEPENDENCY_OF,
+          RELATION_DEPENDS_ON,
+        ]}
+        unidirectional={false}
+      />
     </EntityLayout.Route>
@@ -317,2 +356,5 @@ const domainPage = (
         </Grid>
+        <Grid item md={6} xs={12}>
+          <EntityCatalogGraphCard variant="gridItem" height={400} />
+        </Grid>
         <Grid item md={6}>
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
index cf380b6..cd4603e 100644
--- a/packages/app/src/components/search/SearchPage.tsx
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -3,4 +3,8 @@ import { makeStyles, Theme, Grid, List, Paper } from '@material-ui/core';
 
-import { CatalogResultListItem } from '@backstage/plugin-catalog';
-import { DocsResultListItem } from '@backstage/plugin-techdocs';
+import { CatalogSearchResultListItem } from '@backstage/plugin-catalog';
+import {
+  catalogApiRef,
+  CATALOG_FILTER_EXISTS,
+} from '@backstage/plugin-catalog-react';
+import { TechDocsSearchResultListItem } from '@backstage/plugin-techdocs';
 
@@ -12,2 +16,3 @@ import {
   DefaultResultListItem,
+  useSearch,
 } from '@backstage/plugin-search';
@@ -20,2 +25,3 @@ import {
 } from '@backstage/core-components';
+import { useApi } from '@backstage/core-plugin-api';
 
@@ -38,2 +44,4 @@ const SearchPage = () => {
   const classes = useStyles();
+  const { types } = useSearch();
+  const catalogApi = useApi(catalogApiRef);
 
@@ -67,4 +75,26 @@ const SearchPage = () => {
             <Paper className={classes.filters}>
+              {types.includes('techdocs') && (
+                <SearchFilter.Select
+                  className={classes.filter}
+                  label="Entity"
+                  name="name"
+                  values={async () => {
+                    // Return a list of entities which are documented.
+                    const { items } = await catalogApi.getEntities({
+                      fields: ['metadata.name'],
+                      filter: {
+                        'metadata.annotations.backstage.io/techdocs-ref':
+                          CATALOG_FILTER_EXISTS,
+                      },
+                    });
+
+                    const names = items.map(entity => entity.metadata.name);
+                    names.sort();
+                    return names;
+                  }}
+                />
+              )}
               <SearchFilter.Select
                 className={classes.filter}
+                label="Kind"
                 name="kind"
@@ -74,2 +104,3 @@ const SearchPage = () => {
                 className={classes.filter}
+                label="Lifecycle"
                 name="lifecycle"
@@ -87,3 +118,3 @@ const SearchPage = () => {
                         return (
-                          <CatalogResultListItem
+                          <CatalogSearchResultListItem
                             key={document.location}
@@ -94,3 +125,3 @@ const SearchPage = () => {
                         return (
-                          <DocsResultListItem
+                          <TechDocsSearchResultListItem
                             key={document.location}
diff --git a/packages/backend/.eslintrc.js b/packages/backend/.eslintrc.js
index 16a033d..e2a53a6 100644
--- a/packages/backend/.eslintrc.js
+++ b/packages/backend/.eslintrc.js
@@ -1,3 +1 @@
-module.exports = {
-  extends: [require.resolve('@backstage/cli/config/eslint.backend')],
-};
+module.exports = require('@backstage/cli/config/eslint-factory')(__dirname);
diff --git a/packages/backend/Dockerfile b/packages/backend/Dockerfile
index 31231a3..dd35d4d 100644
--- a/packages/backend/Dockerfile
+++ b/packages/backend/Dockerfile
@@ -11,3 +11,3 @@
 
-FROM node:14-buster-slim
+FROM node:16-bullseye-slim
 
@@ -21,2 +21,8 @@ RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz
 
+# install sqlite3 dependencies
+RUN apt-get update && \
+    apt-get install -y libsqlite3-dev python3 cmake g++ && \
+    rm -rf /var/lib/apt/lists/* && \
+    yarn config set python /usr/bin/python3
+
 RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -rf "$(yarn cache dir)"
diff --git a/packages/backend/package.json b/packages/backend/package.json
index afdde8d..f5d216b 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -6,9 +6,12 @@
   "private": true,
+  "backstage": {
+    "role": "backend"
+  },
   "scripts": {
-    "build": "backstage-cli backend:bundle",
+    "start": "backstage-cli package start",
+    "build": "backstage-cli package build",
+    "lint": "backstage-cli package lint",
+    "test": "backstage-cli package test",
+    "clean": "backstage-cli package clean",
     "build-image": "docker build ../.. -f Dockerfile --tag backstage",
-    "start": "backstage-cli backend:dev",
-    "lint": "backstage-cli lint",
-    "test": "backstage-cli test",
-    "clean": "backstage-cli clean",
     "migrate:create": "knex migrate:make -x ts"
@@ -16,16 +19,18 @@
   "dependencies": {
-    "app": "0.0.0",
-    "@backstage/backend-common": "^0.10.1",
-    "@backstage/backend-tasks": "^0.1.1",
-    "@backstage/catalog-model": "^0.9.8",
-    "@backstage/catalog-client": "^0.5.3",
-    "@backstage/config": "^0.1.11",
-    "@backstage/plugin-app-backend": "^0.3.21",
-    "@backstage/plugin-auth-backend": "^0.6.0",
-    "@backstage/plugin-catalog-backend": "^0.19.4",
-    "@backstage/plugin-proxy-backend": "^0.2.15",
-    "@backstage/plugin-scaffolder-backend": "^0.15.19",
-    "@backstage/plugin-search-backend": "^0.3.0",
-    "@backstage/plugin-search-backend-node": "^0.4.3",
-    "@backstage/plugin-techdocs-backend": "^0.12.2",
+    "app": "link:../app",
+    "@backstage/backend-common": "^0.13.1",
+    "@backstage/backend-tasks": "^0.2.1",
+    "@backstage/catalog-model": "^1.0.0",
+    "@backstage/catalog-client": "^1.0.0",
+    "@backstage/config": "^1.0.0",
+    "@backstage/plugin-app-backend": "^0.3.30",
+    "@backstage/plugin-auth-backend": "^0.12.2",
+    "@backstage/plugin-catalog-backend": "^1.0.0",
+    "@backstage/plugin-permission-common": "^0.5.3",
+    "@backstage/plugin-permission-node": "^0.5.5",
+    "@backstage/plugin-proxy-backend": "^0.2.24",
+    "@backstage/plugin-scaffolder-backend": "^1.0.0",
+    "@backstage/plugin-search-backend": "^0.4.8",
+    "@backstage/plugin-search-backend-node": "^0.5.2",
+    "@backstage/plugin-techdocs-backend": "^1.0.0",
     "@gitbeaker/node": "^34.6.0",
@@ -36,3 +41,3 @@
     "knex": "^0.21.6",
-    "sqlite3": "^5.0.1",
+    "better-sqlite3": "^7.5.0",
     "winston": "^3.2.1"
@@ -40,3 +45,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.10.4",
+    "@backstage/cli": "^0.16.0",
     "@types/dockerode": "^3.3.0",
diff --git a/packages/backend/src/index.ts b/packages/backend/src/index.ts
index 08d21e6..70bc66b 100644
--- a/packages/backend/src/index.ts
+++ b/packages/backend/src/index.ts
@@ -31,2 +31,3 @@ import search from './plugins/search';
 import { PluginEnvironment } from './types';
+import { ServerPermissionClient } from '@backstage/plugin-permission-node';
 
@@ -40,2 +41,6 @@ function makeCreateEnv(config: Config) {
   const taskScheduler = TaskScheduler.fromConfig(config);
+  const permissions = ServerPermissionClient.fromConfig(config, {
+    discovery,
+    tokenManager,
+  });
 
@@ -57,2 +62,3 @@ function makeCreateEnv(config: Config) {
       scheduler,
+      permissions,
     };
diff --git a/packages/backend/src/plugins/app.ts b/packages/backend/src/plugins/app.ts
index 07fb04f..7c37f68 100644
--- a/packages/backend/src/plugins/app.ts
+++ b/packages/backend/src/plugins/app.ts
@@ -4,9 +4,9 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-}: PluginEnvironment): Promise<Router> {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   return await createRouter({
-    logger,
-    config,
+    logger: env.logger,
+    config: env.config,
+    database: env.database,
     appPackageName: 'app',
diff --git a/packages/backend/src/plugins/auth.ts b/packages/backend/src/plugins/auth.ts
index 5216510..1476e66 100644
--- a/packages/backend/src/plugins/auth.ts
+++ b/packages/backend/src/plugins/auth.ts
@@ -4,9 +4,12 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  database,
-  config,
-  discovery,
-}: PluginEnvironment): Promise<Router> {
-  return await createRouter({ logger, config, database, discovery });
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
+  return await createRouter({
+    logger: env.logger,
+    config: env.config,
+    database: env.database,
+    discovery: env.discovery,
+    tokenManager: env.tokenManager,
+  });
 }
diff --git a/packages/backend/src/plugins/proxy.ts b/packages/backend/src/plugins/proxy.ts
index 506f6d9..54ec393 100644
--- a/packages/backend/src/plugins/proxy.ts
+++ b/packages/backend/src/plugins/proxy.ts
@@ -4,8 +4,10 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  discovery,
-}: PluginEnvironment): Promise<Router> {
-  return await createRouter({ logger, config, discovery });
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
+  return await createRouter({
+    logger: env.logger,
+    config: env.config,
+    discovery: env.discovery,
+  });
 }
diff --git a/packages/backend/src/plugins/scaffolder.ts b/packages/backend/src/plugins/scaffolder.ts
index 6be2e97..7ce5fcf 100644
--- a/packages/backend/src/plugins/scaffolder.ts
+++ b/packages/backend/src/plugins/scaffolder.ts
@@ -1,5 +1,3 @@
-import { DockerContainerRunner } from '@backstage/backend-common';
 import { CatalogClient } from '@backstage/catalog-client';
 import { createRouter } from '@backstage/plugin-scaffolder-backend';
-import Docker from 'dockerode';
 import { Router } from 'express';
@@ -7,20 +5,15 @@ import type { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  database,
-  reader,
-  discovery,
-}: PluginEnvironment): Promise<Router> {
-  const dockerClient = new Docker();
-  const containerRunner = new DockerContainerRunner({ dockerClient });
-  const catalogClient = new CatalogClient({ discoveryApi: discovery });
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
+  const catalogClient = new CatalogClient({
+    discoveryApi: env.discovery,
+  });
 
   return await createRouter({
-    containerRunner,
-    logger,
-    config,
-    database,
+    logger: env.logger,
+    config: env.config,
+    database: env.database,
+    reader: env.reader,
     catalogClient,
-    reader,
   });
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
index f23b0c7..8df6b0a 100644
--- a/packages/backend/src/plugins/search.ts
+++ b/packages/backend/src/plugins/search.ts
@@ -7,14 +7,17 @@ import {
 import { PluginEnvironment } from '../types';
-import { DefaultCatalogCollator } from '@backstage/plugin-catalog-backend';
-import { DefaultTechDocsCollator } from '@backstage/plugin-techdocs-backend';
+import { DefaultCatalogCollatorFactory } from '@backstage/plugin-catalog-backend';
+import { DefaultTechDocsCollatorFactory } from '@backstage/plugin-techdocs-backend';
+import { Router } from 'express';
 
-export default async function createPlugin({
-  logger,
-  discovery,
-  config,
-  tokenManager,
-}: PluginEnvironment) {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   // Initialize a connection to a search engine.
-  const searchEngine = new LunrSearchEngine({ logger });
-  const indexBuilder = new IndexBuilder({ logger, searchEngine });
+  const searchEngine = new LunrSearchEngine({
+    logger: env.logger,
+  });
+  const indexBuilder = new IndexBuilder({
+    logger: env.logger,
+    searchEngine,
+  });
 
@@ -24,5 +27,5 @@ export default async function createPlugin({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultCatalogCollator.fromConfig(config, {
-      discovery,
-      tokenManager,
+    factory: DefaultCatalogCollatorFactory.fromConfig(env.config, {
+      discovery: env.discovery,
+      tokenManager: env.tokenManager,
     }),
@@ -33,6 +36,6 @@ export default async function createPlugin({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultTechDocsCollator.fromConfig(config, {
-      discovery,
-      logger,
-      tokenManager,
+    factory: DefaultTechDocsCollatorFactory.fromConfig(env.config, {
+      discovery: env.discovery,
+      logger: env.logger,
+      tokenManager: env.tokenManager,
     }),
@@ -51,3 +54,6 @@ export default async function createPlugin({
     engine: indexBuilder.getSearchEngine(),
-    logger,
+    types: indexBuilder.getDocumentTypes(),
+    permissions: env.permissions,
+    config: env.config,
+    logger: env.logger,
   });
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index 054c64d..be8bb0c 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -11,13 +11,9 @@ import { PluginEnvironment } from '../types';
 
-export default async function createPlugin({
-  logger,
-  config,
-  discovery,
-  reader,
-  cache,
-}: PluginEnvironment): Promise<Router> {
+export default async function createPlugin(
+  env: PluginEnvironment,
+): Promise<Router> {
   // Preparers are responsible for fetching source files for documentation.
-  const preparers = await Preparers.fromConfig(config, {
-    logger,
-    reader,
+  const preparers = await Preparers.fromConfig(env.config, {
+    logger: env.logger,
+    reader: env.reader,
   });
@@ -29,4 +25,4 @@ export default async function createPlugin({
   // Generators are used for generating documentation sites.
-  const generators = await Generators.fromConfig(config, {
-    logger,
+  const generators = await Generators.fromConfig(env.config, {
+    logger: env.logger,
     containerRunner,
@@ -37,5 +33,5 @@ export default async function createPlugin({
   // 2. Fetching files from storage and passing them to TechDocs frontend.
-  const publisher = await Publisher.fromConfig(config, {
-    logger,
-    discovery,
+  const publisher = await Publisher.fromConfig(env.config, {
+    logger: env.logger,
+    discovery: env.discovery,
   });
@@ -49,6 +45,6 @@ export default async function createPlugin({
     publisher,
-    logger,
-    config,
-    discovery,
-    cache,
+    logger: env.logger,
+    config: env.config,
+    discovery: env.discovery,
+    cache: env.cache,
   });
diff --git a/packages/backend/src/types.ts b/packages/backend/src/types.ts
index c3d0158..0862b0e 100644
--- a/packages/backend/src/types.ts
+++ b/packages/backend/src/types.ts
@@ -10,2 +10,3 @@ import {
 import { PluginTaskScheduler } from '@backstage/backend-tasks';
+import { PermissionAuthorizer } from '@backstage/plugin-permission-common';
 
@@ -20,2 +21,3 @@ export type PluginEnvironment = {
   scheduler: PluginTaskScheduler;
+  permissions: PermissionAuthorizer;
 };
