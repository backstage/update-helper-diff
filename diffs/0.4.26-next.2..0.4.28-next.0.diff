diff --git a/.dockerignore b/.dockerignore
index 63c9c34..505a7b5 100644
--- a/.dockerignore
+++ b/.dockerignore
@@ -2,4 +2,5 @@
 node_modules
-packages
-!packages/backend/dist
+packages/*/src
+packages/*/node_modules
 plugins
+*.local.yaml
diff --git a/app-config.production.yaml b/app-config.production.yaml
index 5e36c23..b9dd00b 100644
--- a/app-config.production.yaml
+++ b/app-config.production.yaml
@@ -1,3 +1,3 @@
 app:
-  # Should be the same as backend.baseUrl when using the `app-backend` plugin
+  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
   baseUrl: http://localhost:7007
@@ -5,2 +5,7 @@ app:
 backend:
+  # Note that the baseUrl should be the URL that the browser and other clients
+  # should use when communicating with the backend, i.e. it needs to be
+  # reachable not just from within the backend host, but from all of your
+  # callers. When its value is "http://localhost:7007", it's strictly private
+  # and can't be reached by others.
   baseUrl: http://localhost:7007
@@ -8 +13,22 @@ backend:
     port: 7007
+    # The following host directive binds to all IPv4 interfaces when its value
+    # is "0.0.0.0". This is the most permissive setting. The right value depends
+    # on your specific deployment. If you remove the host line entirely, the
+    # backend will bind on the interface that corresponds to the backend.baseUrl
+    # hostname.
+    host: 0.0.0.0
+
+  # config options: https://node-postgres.com/api/client
+  database:
+    client: pg
+    connection:
+      host: ${POSTGRES_HOST}
+      port: ${POSTGRES_PORT}
+      user: ${POSTGRES_USER}
+      password: ${POSTGRES_PASSWORD}
+      # https://node-postgres.com/features/ssl
+      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
+      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
+      # ssl:
+      #   ca: # if you have a CA file and want to verify it you can uncomment this section
+      #     $file: <file-path>/ca/server.crt
diff --git a/app-config.yaml b/app-config.yaml
index 2f2a14b..cd6998d 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -17,2 +17,5 @@ backend:
     port: 7007
+    # Uncomment the following host directive to bind to all IPv4 interfaces and
+    # not just the baseUrl hostname.
+    # host: 0.0.0.0
   csp:
@@ -25,2 +28,4 @@ backend:
     credentials: true
+  # This is for local developement only, it is not recommended to use this in production
+  # The production database configuration is stored in app-config.production.yaml
   database:
@@ -35,2 +40,4 @@ integrations:
     - host: github.com
+      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
+      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
       token: ${GITHUB_TOKEN}
@@ -71,34 +78,26 @@ catalog:
   locations:
-    # Backstage example components
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml
+    # Local example data, file locations are relative to the backend process, typically `packages/backend`
+    - type: file
+      target: ../../examples/entities.yaml
 
-    # Backstage example systems
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml
-
-    # Backstage example APIs
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml
-
-    # Backstage example resources
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml
-
-    # Backstage example organization groups
-    - type: url
-      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml
-
-    # Backstage example templates
-    - type: url
-      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
-      rules:
-        - allow: [Template]
-    - type: url
-      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/springboot-grpc-template/template.yaml
+    # Local example template
+    - type: file
+      target: ../../examples/template/template.yaml
       rules:
         - allow: [Template]
-    - type: url
-      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/docs-template/template.yaml
+
+    # Local example organizational data
+    - type: file
+      target: ../../examples/org.yaml
       rules:
-        - allow: [Template]
+        - allow: [User, Group]
+
+    ## Uncomment these lines to add more example data
+    # - type: url
+    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml
+
+    ## Uncomment these lines to add an example org
+    # - type: url
+    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
+    #   rules:
+    #     - allow: [User, Group]
diff --git a/backstage.json b/backstage.json
index 487ac1f..1b35d9c 100644
--- a/backstage.json
+++ b/backstage.json
@@ -1,3 +1,3 @@
 {
-  "version": "1.1.0-next.3"
+  "version": "1.3.0-next.0"
 }
diff --git a/examples/entities.yaml b/examples/entities.yaml
new file mode 100644
index 0000000..447e8b1
--- /dev/null
+++ b/examples/entities.yaml
@@ -0,0 +1,41 @@
+---
+# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
+apiVersion: backstage.io/v1alpha1
+kind: System
+metadata:
+  name: examples
+spec:
+  owner: guests
+---
+# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
+apiVersion: backstage.io/v1alpha1
+kind: Component
+metadata:
+  name: example-website
+spec:
+  type: website
+  lifecycle: experimental
+  owner: guests
+  system: examples
+  providesApis: [example-grpc-api]
+---
+# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
+apiVersion: backstage.io/v1alpha1
+kind: API
+metadata:
+  name: example-grpc-api
+spec:
+  type: grpc
+  lifecycle: experimental
+  owner: guests
+  system: examples
+  definition: |
+    syntax = "proto3";
+
+    service Exampler {
+      rpc Example (ExampleMessage) returns (ExampleMessage) {};
+    }
+
+    message ExampleMessage {
+      string example = 1;
+    };
diff --git a/examples/org.yaml b/examples/org.yaml
new file mode 100644
index 0000000..a10e81f
--- /dev/null
+++ b/examples/org.yaml
@@ -0,0 +1,17 @@
+---
+# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-user
+apiVersion: backstage.io/v1alpha1
+kind: User
+metadata:
+  name: guest
+spec:
+  memberOf: [guests]
+---
+# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-group
+apiVersion: backstage.io/v1alpha1
+kind: Group
+metadata:
+  name: guests
+spec:
+  type: team
+  children: []
diff --git a/examples/template/content/catalog-info.yaml b/examples/template/content/catalog-info.yaml
new file mode 100644
index 0000000..d4ccca4
--- /dev/null
+++ b/examples/template/content/catalog-info.yaml
@@ -0,0 +1,8 @@
+apiVersion: backstage.io/v1alpha1
+kind: Component
+metadata:
+  name: ${{ values.name | dump }}
+spec:
+  type: service
+  owner: user:guest
+  lifecycle: experimental
diff --git a/examples/template/content/index.js b/examples/template/content/index.js
new file mode 100644
index 0000000..071ce5a
--- /dev/null
+++ b/examples/template/content/index.js
@@ -0,0 +1 @@
+console.log('Hello from ${{ values.name }}!');
diff --git a/examples/template/content/package.json b/examples/template/content/package.json
new file mode 100644
index 0000000..86f968a
--- /dev/null
+++ b/examples/template/content/package.json
@@ -0,0 +1,5 @@
+{
+  "name": "${{ values.name }}",
+  "private": true,
+  "dependencies": {}
+}
diff --git a/examples/template/template.yaml b/examples/template/template.yaml
new file mode 100644
index 0000000..50052b7
--- /dev/null
+++ b/examples/template/template.yaml
@@ -0,0 +1,74 @@
+apiVersion: scaffolder.backstage.io/v1beta3
+# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
+kind: Template
+metadata:
+  name: example-nodejs-template
+  title: Example Node.js Template
+  description: An example template for the scaffolder that creates a simple Node.js service
+spec:
+  owner: user:guest
+  type: service
+
+  # These parameters are used to generate the input form in the frontend, and are
+  # used to gather input data for the execution of the template.
+  parameters:
+    - title: Fill in some steps
+      required:
+        - name
+      properties:
+        name:
+          title: Name
+          type: string
+          description: Unique name of the component
+          ui:autofocus: true
+          ui:options:
+            rows: 5
+    - title: Choose a location
+      required:
+        - repoUrl
+      properties:
+        repoUrl:
+          title: Repository Location
+          type: string
+          ui:field: RepoUrlPicker
+          ui:options:
+            allowedHosts:
+              - github.com
+
+  # These steps are executed in the scaffolder backend, using data that we gathered
+  # via the parameters above.
+  steps:
+    # Each step executes an action, in this case one templates files into the working directory.
+    - id: fetch-base
+      name: Fetch Base
+      action: fetch:template
+      input:
+        url: ./content
+        values:
+          name: ${{ parameters.name }}
+
+    # This step publishes the contents of the working directory to GitHub.
+    - id: publish
+      name: Publish
+      action: publish:github
+      input:
+        allowedHosts: ['github.com']
+        description: This is ${{ parameters.name }}
+        repoUrl: ${{ parameters.repoUrl }}
+
+    # The final step is to register our new component in the catalog.
+    - id: register
+      name: Register
+      action: catalog:register
+      input:
+        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
+        catalogInfoPath: '/catalog-info.yaml'
+
+  # Outputs are displayed to the user after a successful execution of the template.
+  output:
+    links:
+      - title: Repository
+        url: ${{ steps.publish.output.remoteUrl }}
+      - title: Open in catalog
+        icon: catalog
+        entityRef: ${{ steps.register.output.entityRef }}
diff --git a/package.json b/package.json
index 4d9a715..a3fcfee 100644
--- a/package.json
+++ b/package.json
@@ -32,3 +32,3 @@
   "devDependencies": {
-    "@backstage/cli": "^0.17.0-next.3",
+    "@backstage/cli": "^0.17.2-next.0",
     "@spotify/prettier-config": "^12.0.0",
@@ -37,3 +37,3 @@
     "prettier": "^2.3.2",
-    "typescript": "~4.5.4"
+    "typescript": "~4.6.4"
   },
diff --git a/packages/app/package.json b/packages/app/package.json
index 2fa1628..c6cb9cf 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -9,23 +9,26 @@
   "dependencies": {
-    "@backstage/app-defaults": "^1.0.1-next.2",
-    "@backstage/catalog-model": "^1.0.1-next.1",
-    "@backstage/cli": "^0.17.0-next.3",
-    "@backstage/core-app-api": "^1.0.1-next.1",
-    "@backstage/core-components": "^0.9.3-next.2",
-    "@backstage/core-plugin-api": "^1.0.1-next.0",
-    "@backstage/integration-react": "^1.0.1-next.2",
-    "@backstage/plugin-api-docs": "^0.8.4-next.3",
-    "@backstage/plugin-catalog": "^1.1.0-next.3",
-    "@backstage/plugin-catalog-common": "^1.0.1-next.1",
-    "@backstage/plugin-catalog-graph": "^0.2.16-next.3",
-    "@backstage/plugin-catalog-import": "^0.8.7-next.2",
-    "@backstage/plugin-catalog-react": "^1.0.1-next.3",
-    "@backstage/plugin-github-actions": "^0.5.4-next.2",
-    "@backstage/plugin-org": "^0.5.4-next.3",
-    "@backstage/plugin-permission-react": "^0.4.0-next.1",
-    "@backstage/plugin-scaffolder": "^1.1.0-next.3",
-    "@backstage/plugin-search": "^0.7.5-next.1",
-    "@backstage/plugin-tech-radar": "^0.5.11-next.2",
-    "@backstage/plugin-techdocs": "^1.1.0-next.3",
-    "@backstage/plugin-user-settings": "^0.4.3-next.1",
+    "@backstage/app-defaults": "^1.0.3-next.0",
+    "@backstage/catalog-model": "^1.0.2",
+    "@backstage/cli": "^0.17.2-next.0",
+    "@backstage/core-app-api": "^1.0.2",
+    "@backstage/core-components": "^0.9.5-next.0",
+    "@backstage/core-plugin-api": "^1.0.2",
+    "@backstage/integration-react": "^1.1.1-next.0",
+    "@backstage/plugin-api-docs": "^0.8.6-next.0",
+    "@backstage/plugin-catalog": "^1.2.1-next.0",
+    "@backstage/plugin-catalog-common": "^1.0.2",
+    "@backstage/plugin-catalog-graph": "^0.2.18-next.0",
+    "@backstage/plugin-catalog-import": "^0.8.9-next.0",
+    "@backstage/plugin-catalog-react": "^1.1.1-next.0",
+    "@backstage/plugin-github-actions": "^0.5.6-next.0",
+    "@backstage/plugin-org": "^0.5.6-next.0",
+    "@backstage/plugin-permission-react": "^0.4.1",
+    "@backstage/plugin-scaffolder": "^1.3.0-next.0",
+    "@backstage/plugin-search": "^0.8.2-next.0",
+    "@backstage/plugin-search-react": "^0.2.0",
+    "@backstage/plugin-tech-radar": "^0.5.13-next.0",
+    "@backstage/plugin-techdocs": "^1.1.2-next.0",
+    "@backstage/plugin-techdocs-react": "^1.0.1-next.0",
+    "@backstage/plugin-techdocs-module-addons-contrib": "^1.0.1-next.0",
+    "@backstage/plugin-user-settings": "^0.4.5-next.0",
     "@backstage/theme": "^0.2.15",
@@ -41,3 +44,3 @@
   "devDependencies": {
-    "@backstage/test-utils": "^1.0.1-next.2",
+    "@backstage/test-utils": "^1.1.0",
     "@testing-library/jest-dom": "^5.10.1",
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index f4ff424..c487726 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -21,2 +21,4 @@ import {
 } from '@backstage/plugin-techdocs';
+import { TechDocsAddons } from '@backstage/plugin-techdocs-react';
+import { ReportIssue } from '@backstage/plugin-techdocs-module-addons-contrib';
 import { UserSettingsPage } from '@backstage/plugin-user-settings';
@@ -70,3 +72,7 @@ const routes = (
       element={<TechDocsReaderPage />}
-    />
+    >
+      <TechDocsAddons>
+        <ReportIssue />
+      </TechDocsAddons>
+    </Route>
     <Route path="/create" element={<ScaffolderPage />} />
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index 90738c4..d10eccf 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -71,2 +71,3 @@ const SidebarLogo = () => {
         className={classes.link}
+        aria-label="Home"
       >
diff --git a/packages/app/src/components/catalog/EntityPage.tsx b/packages/app/src/components/catalog/EntityPage.tsx
index 84d0944..6ec4da0 100644
--- a/packages/app/src/components/catalog/EntityPage.tsx
+++ b/packages/app/src/components/catalog/EntityPage.tsx
@@ -70,2 +70,13 @@ import {
 
+import { TechDocsAddons } from '@backstage/plugin-techdocs-react';
+import { ReportIssue } from '@backstage/plugin-techdocs-module-addons-contrib';
+
+const techdocsContent = (
+  <EntityTechdocsContent>
+    <TechDocsAddons>
+      <ReportIssue />
+    </TechDocsAddons>
+  </EntityTechdocsContent>
+);
+
 const cicdContent = (
@@ -169,3 +180,3 @@ const serviceEntityPage = (
     <EntityLayout.Route path="/docs" title="Docs">
-      <EntityTechdocsContent />
+      {techdocsContent}
     </EntityLayout.Route>
@@ -196,3 +207,3 @@ const websiteEntityPage = (
     <EntityLayout.Route path="/docs" title="Docs">
-      <EntityTechdocsContent />
+      {techdocsContent}
     </EntityLayout.Route>
@@ -215,3 +226,3 @@ const defaultEntityPage = (
     <EntityLayout.Route path="/docs" title="Docs">
-      <EntityTechdocsContent />
+      {techdocsContent}
     </EntityLayout.Route>
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
index cd4603e..d4c7c92 100644
--- a/packages/app/src/components/search/SearchPage.tsx
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -16,4 +16,4 @@ import {
   DefaultResultListItem,
-  useSearch,
 } from '@backstage/plugin-search';
+import { useSearch } from '@backstage/plugin-search-react';
 import {
@@ -114,3 +114,3 @@ const SearchPage = () => {
                 <List>
-                  {results.map(({ type, document }) => {
+                  {results.map(({ type, document, highlight }) => {
                     switch (type) {
@@ -121,2 +121,3 @@ const SearchPage = () => {
                             result={document}
+                            highlight={highlight}
                           />
@@ -128,2 +129,3 @@ const SearchPage = () => {
                             result={document}
+                            highlight={highlight}
                           />
@@ -135,2 +137,3 @@ const SearchPage = () => {
                             result={document}
+                            highlight={highlight}
                           />
diff --git a/packages/backend/Dockerfile b/packages/backend/Dockerfile
index dd35d4d..a5773aa 100644
--- a/packages/backend/Dockerfile
+++ b/packages/backend/Dockerfile
@@ -15,2 +15,8 @@ WORKDIR /app
 
+# install sqlite3 dependencies, you can skip this if you don't use sqlite3 in the image
+RUN apt-get update && \
+    apt-get install -y --no-install-recommends libsqlite3-dev python3 build-essential && \
+    rm -rf /var/lib/apt/lists/* && \
+    yarn config set python /usr/bin/python3
+
 # Copy repo skeleton first, to avoid unnecessary docker cache invalidation.
@@ -21,8 +27,2 @@ RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz
 
-# install sqlite3 dependencies
-RUN apt-get update && \
-    apt-get install -y libsqlite3-dev python3 cmake g++ && \
-    rm -rf /var/lib/apt/lists/* && \
-    yarn config set python /usr/bin/python3
-
 RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -rf "$(yarn cache dir)"
@@ -30,5 +30,5 @@ RUN yarn install --frozen-lockfile --production --network-timeout 300000 && rm -
 # Then copy the rest of the backend bundle, along with any other files we might want.
-COPY packages/backend/dist/bundle.tar.gz app-config.yaml ./
+COPY packages/backend/dist/bundle.tar.gz app-config*.yaml ./
 RUN tar xzf bundle.tar.gz && rm bundle.tar.gz
 
-CMD ["node", "packages/backend", "--config", "app-config.yaml"]
+CMD ["node", "packages/backend", "--config", "app-config.yaml", "--config", "app-config.production.yaml"]
diff --git a/packages/backend/package.json b/packages/backend/package.json
index f8815ef..9ddc756 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -19,17 +19,18 @@
     "app": "link:../app",
-    "@backstage/backend-common": "^0.13.2-next.2",
-    "@backstage/backend-tasks": "^0.3.0-next.2",
-    "@backstage/catalog-model": "^1.0.1-next.1",
-    "@backstage/catalog-client": "^1.0.1-next.0",
-    "@backstage/config": "^1.0.0",
-    "@backstage/plugin-app-backend": "^0.3.31-next.1",
-    "@backstage/plugin-auth-backend": "^0.13.0-next.2",
-    "@backstage/plugin-catalog-backend": "^1.1.0-next.3",
-    "@backstage/plugin-permission-common": "^0.6.0-next.1",
-    "@backstage/plugin-permission-node": "^0.6.0-next.2",
-    "@backstage/plugin-proxy-backend": "^0.2.25-next.0",
-    "@backstage/plugin-scaffolder-backend": "^1.1.0-next.2",
-    "@backstage/plugin-search-backend": "^0.5.0-next.2",
-    "@backstage/plugin-search-backend-node": "^0.6.0-next.1",
-    "@backstage/plugin-techdocs-backend": "^1.1.0-next.2",
+    "@backstage/backend-common": "^0.13.6-next.0",
+    "@backstage/backend-tasks": "^0.3.2-next.0",
+    "@backstage/catalog-model": "^1.0.2",
+    "@backstage/catalog-client": "^1.0.2",
+    "@backstage/config": "^1.0.1",
+    "@backstage/plugin-app-backend": "^0.3.33-next.0",
+    "@backstage/plugin-auth-backend": "^0.14.1-next.0",
+    "@backstage/plugin-catalog-backend": "^1.2.0-next.0",
+    "@backstage/plugin-permission-common": "^0.6.1",
+    "@backstage/plugin-permission-node": "^0.6.2-next.0",
+    "@backstage/plugin-proxy-backend": "^0.2.27-next.0",
+    "@backstage/plugin-scaffolder-backend": "^1.3.0-next.0",
+    "@backstage/plugin-search-backend": "^0.5.3-next.0",
+    "@backstage/plugin-search-backend-module-pg": "^0.3.4-next.0",
+    "@backstage/plugin-search-backend-node": "^0.6.2-next.0",
+    "@backstage/plugin-techdocs-backend": "^1.1.2-next.0",
     "dockerode": "^3.3.1",
@@ -37,4 +38,3 @@
     "express-promise-router": "^4.1.0",
-    "luxon": "^2.0.2",
-    "better-sqlite3": "^7.5.0",
+    "pg": "^8.3.0",
     "winston": "^3.2.1"
@@ -42,7 +42,8 @@
   "devDependencies": {
-    "@backstage/cli": "^0.17.0-next.3",
+    "@backstage/cli": "^0.17.2-next.0",
     "@types/dockerode": "^3.3.0",
-    "@types/express": "^4.17.6",
     "@types/express-serve-static-core": "^4.17.5",
-    "@types/luxon": "^2.0.4"
+    "@types/express": "^4.17.6",
+    "@types/luxon": "^2.0.4",
+    "better-sqlite3": "^7.5.0"
   },
diff --git a/packages/backend/src/plugins/auth.ts b/packages/backend/src/plugins/auth.ts
index 1476e66..13f18c5 100644
--- a/packages/backend/src/plugins/auth.ts
+++ b/packages/backend/src/plugins/auth.ts
@@ -1,2 +1,6 @@
-import { createRouter } from '@backstage/plugin-auth-backend';
+import {
+  createRouter,
+  providers,
+  defaultAuthProviderFactories,
+} from '@backstage/plugin-auth-backend';
 import { Router } from 'express';
@@ -13,2 +17,19 @@ export default async function createPlugin(
     tokenManager: env.tokenManager,
+    providerFactories: {
+      ...defaultAuthProviderFactories,
+
+      // This overrides the default GitHub auth provider with a custom one.
+      // Since the options are empty it will behave just like the default
+      // provider, but if you uncomment the `signIn` section you will enable
+      // sign-in via GitHub. This particular configuration uses a resolver
+      // that matches the username to the user entity name. See the auth
+      // documentation for more details on how to enable and customize sign-in:
+      //
+      //   https://backstage.io/docs/auth/identity-resolver
+      github: providers.github.create({
+        // signIn: {
+        //   resolver: providers.github.resolvers.usernameMatchingUserEntityName(),
+        // },
+      }),
+    },
   });
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
index 27c42fc..e9469dc 100644
--- a/packages/backend/src/plugins/search.ts
+++ b/packages/backend/src/plugins/search.ts
@@ -10,3 +10,2 @@ import { DefaultTechDocsCollatorFactory } from '@backstage/plugin-techdocs-backe
 import { Router } from 'express';
-import { Duration } from 'luxon';
 
@@ -25,7 +24,7 @@ export default async function createPlugin(
   const schedule = env.scheduler.createScheduledTaskRunner({
-    frequency: Duration.fromObject({ minutes: 10 }),
-    timeout: Duration.fromObject({ minutes: 15 }),
+    frequency: { minutes: 10 },
+    timeout: { minutes: 15 },
     // A 3 second delay gives the backend server a chance to initialize before
     // any collators are executed, which may attempt requests against the API.
-    initialDelay: Duration.fromObject({ seconds: 3 }),
+    initialDelay: { seconds: 3 },
   });
