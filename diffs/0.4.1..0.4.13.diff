diff --git a/app-config.production.yaml b/app-config.production.yaml
index 92f4574..5e36c23 100644
--- a/app-config.production.yaml
+++ b/app-config.production.yaml
@@ -2,7 +2,7 @@ app:
   # Should be the same as backend.baseUrl when using the `app-backend` plugin
-  baseUrl: http://localhost:7000
+  baseUrl: http://localhost:7007
 
 backend:
-  baseUrl: http://localhost:7000
+  baseUrl: http://localhost:7007
   listen:
-    port: 7000
+    port: 7007
diff --git a/app-config.yaml b/app-config.yaml
index 93b0c3f..1a622a2 100644
--- a/app-config.yaml
+++ b/app-config.yaml
@@ -8,5 +8,10 @@ organization:
 backend:
-  baseUrl: http://localhost:7000
+  # Used for enabling authentication, secret is shared by all backend plugins
+  # See backend-to-backend-auth.md in the docs for information on the format
+  # auth:
+  #   keys:
+  #     - secret: ${BACKEND_SECRET}
+  baseUrl: http://localhost:7007
   listen:
-    port: 7000
+    port: 7007
   csp:
@@ -56,5 +61,3 @@ auth:
 scaffolder:
-  github:
-    token: ${GITHUB_TOKEN}
-    visibility: public # or 'internal' or 'private'
+  # see https://backstage.io/docs/features/software-templates/configuration for software template options
 
diff --git a/backstage.json b/backstage.json
new file mode 100644
index 0000000..5a69ad5
--- /dev/null
+++ b/backstage.json
@@ -0,0 +1,3 @@
+{
+  "version": "0.4.13"
+}
diff --git a/package.json b/package.json
index 82cf726..19a4f52 100644
--- a/package.json
+++ b/package.json
@@ -22,9 +22,5 @@
     "prettier:check": "prettier --check .",
-    "create-plugin": "backstage-cli create-plugin --scope internal --no-private",
+    "create-plugin": "backstage-cli create-plugin --scope internal",
     "remove-plugin": "backstage-cli remove-plugin"
   },
-  "resolutions": {
-    "graphql-language-service-interface": "2.8.2",
-    "graphql-language-service-parser": "1.9.0"
-  },
   "workspaces": {
@@ -36,7 +32,8 @@
   "devDependencies": {
-    "@backstage/cli": "^0.8.1",
-    "@spotify/prettier-config": "^11.0.0",
+    "@backstage/cli": "^0.12.0-next.0",
+    "@spotify/prettier-config": "^12.0.0",
     "concurrently": "^6.0.0",
     "lerna": "^4.0.0",
-    "prettier": "^2.3.2"
+    "prettier": "^2.3.2",
+    "typescript": "~4.5.4"
   },
@@ -44,3 +41,3 @@
   "lint-staged": {
-    "*.{js,jsx,ts,tsx}": [
+    "*.{js,jsx,ts,tsx,mjs,cjs}": [
       "eslint --fix",
diff --git a/packages/app/package.json b/packages/app/package.json
index 0510279..72c01d5 100644
--- a/packages/app/package.json
+++ b/packages/app/package.json
@@ -6,21 +6,21 @@
   "dependencies": {
-    "@backstage/catalog-model": "^0.9.6",
-    "@backstage/cli": "^0.8.1",
-    "@backstage/core-app-api": "^0.1.19",
-    "@backstage/core-components": "^0.7.2",
-    "@backstage/core-plugin-api": "^0.1.12",
-    "@backstage/integration-react": "^0.1.13",
-    "@backstage/plugin-api-docs": "^0.6.12",
-    "@backstage/plugin-catalog": "^0.7.2",
-    "@backstage/plugin-catalog-import": "^0.7.3",
-    "@backstage/plugin-catalog-react": "^0.6.2",
-    "@backstage/plugin-github-actions": "^0.4.22",
-    "@backstage/plugin-org": "^0.3.27",
-    "@backstage/plugin-scaffolder": "^0.11.9",
-    "@backstage/plugin-search": "^0.4.16",
-    "@backstage/plugin-tech-radar": "^0.4.11",
-    "@backstage/plugin-techdocs": "^0.12.4",
-    "@backstage/plugin-user-settings": "^0.3.10",
-    "@backstage/test-utils": "^0.1.20",
-    "@backstage/theme": "^0.2.12",
+    "@backstage/app-defaults": "^0.1.5-next.0",
+    "@backstage/catalog-model": "^0.9.10-next.0",
+    "@backstage/cli": "^0.12.0-next.0",
+    "@backstage/core-app-api": "^0.5.0-next.0",
+    "@backstage/core-components": "^0.8.5-next.0",
+    "@backstage/core-plugin-api": "^0.6.0-next.0",
+    "@backstage/integration-react": "^0.1.19-next.0",
+    "@backstage/plugin-api-docs": "^0.6.23-next.0",
+    "@backstage/plugin-catalog": "^0.7.9-next.0",
+    "@backstage/plugin-catalog-import": "^0.7.10-next.0",
+    "@backstage/plugin-catalog-react": "^0.6.12-next.0",
+    "@backstage/plugin-github-actions": "^0.4.32-next.0",
+    "@backstage/plugin-org": "^0.3.35-next.0",
+    "@backstage/plugin-scaffolder": "^0.11.19-next.0",
+    "@backstage/plugin-search": "^0.5.6-next.0",
+    "@backstage/plugin-tech-radar": "^0.5.3-next.0",
+    "@backstage/plugin-techdocs": "^0.12.15-next.0",
+    "@backstage/plugin-user-settings": "^0.3.17-next.0",
+    "@backstage/theme": "^0.2.14",
     "@material-ui/core": "^4.12.2",
@@ -35,2 +35,3 @@
   "devDependencies": {
+    "@backstage/test-utils": "^0.2.3-next.0",
     "@testing-library/jest-dom": "^5.10.1",
@@ -49,7 +50,7 @@
     "build": "backstage-cli app:build",
-    "test": "backstage-cli test",
-    "lint": "backstage-cli lint",
     "clean": "backstage-cli clean",
+    "test": "backstage-cli test",
     "test:e2e": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:dev",
     "test:e2e:ci": "cross-env PORT=3001 start-server-and-test start http://localhost:3001 cy:run",
+    "lint": "backstage-cli lint",
     "cy:dev": "cypress open",
diff --git a/packages/app/public/index.html b/packages/app/public/index.html
index b93896c..a936c73 100644
--- a/packages/app/public/index.html
+++ b/packages/app/public/index.html
@@ -44,13 +44,7 @@
     />
-    <style>
-      #root {
-        min-height: 100%;
-      }
-    </style>
-    <title><%= app.title %></title>
-    <% if (app.googleAnalyticsTrackingId && typeof app.googleAnalyticsTrackingId
-    === 'string') { %>
+    <title><%= config.getString('app.title') %></title>
+    <% if (config.has('app.googleAnalyticsTrackingId')) { %>
     <script
       async
-      src="https://www.googletagmanager.com/gtag/js?id=<%= app.googleAnalyticsTrackingId %>"
+      src="https://www.googletagmanager.com/gtag/js?id=<%= config.getString('app.googleAnalyticsTrackingId') %>"
     ></script>
@@ -63,3 +57,6 @@
 
-      gtag('config', '<%= app.googleAnalyticsTrackingId %>');
+      gtag(
+        'config',
+        '<%= config.getString("app.googleAnalyticsTrackingId") %>',
+      );
     </script>
@@ -67,3 +64,3 @@
   </head>
-  <body style="margin: 0">
+  <body>
     <noscript>You need to enable JavaScript to run this app.</noscript>
diff --git a/packages/app/src/App.test.tsx b/packages/app/src/App.test.tsx
index 82bc479..b94cac7 100644
--- a/packages/app/src/App.test.tsx
+++ b/packages/app/src/App.test.tsx
@@ -12,5 +12,5 @@ describe('App', () => {
             app: { title: 'Test' },
-            backend: { baseUrl: 'http://localhost:7000' },
+            backend: { baseUrl: 'http://localhost:7007' },
             techdocs: {
-              storageUrl: 'http://localhost:7000/api/techdocs/static/docs',
+              storageUrl: 'http://localhost:7007/api/techdocs/static/docs',
             },
diff --git a/packages/app/src/App.tsx b/packages/app/src/App.tsx
index 4cd8368..8a53583 100644
--- a/packages/app/src/App.tsx
+++ b/packages/app/src/App.tsx
@@ -28,3 +28,4 @@ import { Root } from './components/Root';
 import { AlertDisplay, OAuthRequestDialog } from '@backstage/core-components';
-import { createApp, FlatRoutes } from '@backstage/core-app-api';
+import { createApp } from '@backstage/app-defaults';
+import { FlatRoutes } from '@backstage/core-app-api';
 
diff --git a/packages/app/src/components/Root/Root.tsx b/packages/app/src/components/Root/Root.tsx
index 198e7ec..7e98c7d 100644
--- a/packages/app/src/components/Root/Root.tsx
+++ b/packages/app/src/components/Root/Root.tsx
@@ -26,14 +26,23 @@ import LogoIcon from './LogoIcon';
 import { NavLink } from 'react-router-dom';
-import { Settings as SidebarSettings } from '@backstage/plugin-user-settings';
-import { SidebarSearch } from '@backstage/plugin-search';
+import {
+  Settings as SidebarSettings,
+  UserSettingsSignInAvatar,
+} from '@backstage/plugin-user-settings';
+import {
+  SidebarSearchModal,
+  SearchContextProvider,
+} from '@backstage/plugin-search';
 import {
   Sidebar,
-  SidebarPage,
   sidebarConfig,
   SidebarContext,
-  SidebarItem,
   SidebarDivider,
-  SidebarSpace,
+  SidebarGroup,
+  SidebarItem,
+  SidebarPage,
   SidebarScrollWrapper,
+  SidebarSpace,
 } from '@backstage/core-components';
+import MenuIcon from '@material-ui/icons/Menu';
+import SearchIcon from '@material-ui/icons/Search';
 
@@ -76,17 +85,29 @@ export const Root = ({ children }: PropsWithChildren<{}>) => (
       <SidebarLogo />
-      <SidebarSearch />
+      <SidebarGroup label="Search" icon={<SearchIcon />} to="/search">
+        <SearchContextProvider>
+          <SidebarSearchModal />
+        </SearchContextProvider>{' '}
+      </SidebarGroup>
       <SidebarDivider />
-      {/* Global nav, not org-specific */}
-      <SidebarItem icon={HomeIcon} to="catalog" text="Home" />
-      <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
-      <SidebarItem icon={LibraryBooks} to="docs" text="Docs" />
-      <SidebarItem icon={CreateComponentIcon} to="create" text="Create..." />
-      {/* End global nav */}
-      <SidebarDivider />
-      <SidebarScrollWrapper>
-        <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
-      </SidebarScrollWrapper>
+      <SidebarGroup label="Menu" icon={<MenuIcon />}>
+        {/* Global nav, not org-specific */}
+        <SidebarItem icon={HomeIcon} to="catalog" text="Home" />
+        <SidebarItem icon={ExtensionIcon} to="api-docs" text="APIs" />
+        <SidebarItem icon={LibraryBooks} to="docs" text="Docs" />
+        <SidebarItem icon={CreateComponentIcon} to="create" text="Create..." />
+        {/* End global nav */}
+        <SidebarDivider />
+        <SidebarScrollWrapper>
+          <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />
+        </SidebarScrollWrapper>
+      </SidebarGroup>
       <SidebarSpace />
       <SidebarDivider />
-      <SidebarSettings />
+      <SidebarGroup
+        label="Settings"
+        icon={<UserSettingsSignInAvatar />}
+        to="/settings"
+      >
+        <SidebarSettings />
+      </SidebarGroup>
     </Sidebar>
diff --git a/packages/app/src/components/search/SearchPage.tsx b/packages/app/src/components/search/SearchPage.tsx
index 7b3c2b2..cf380b6 100644
--- a/packages/app/src/components/search/SearchPage.tsx
+++ b/packages/app/src/components/search/SearchPage.tsx
@@ -4,2 +4,4 @@ import { makeStyles, Theme, Grid, List, Paper } from '@material-ui/core';
 import { CatalogResultListItem } from '@backstage/plugin-catalog';
+import { DocsResultListItem } from '@backstage/plugin-techdocs';
+
 import {
@@ -8,5 +10,12 @@ import {
   SearchResult,
+  SearchType,
   DefaultResultListItem,
 } from '@backstage/plugin-search';
-import { Content, Header, Page } from '@backstage/core-components';
+import {
+  CatalogIcon,
+  Content,
+  DocsIcon,
+  Header,
+  Page,
+} from '@backstage/core-components';
 
@@ -18,2 +27,3 @@ const useStyles = makeStyles((theme: Theme) => ({
     padding: theme.spacing(2),
+    marginTop: theme.spacing(2),
   },
@@ -36,3 +46,3 @@ const SearchPage = () => {
             <Paper className={classes.bar}>
-              <SearchBar debounceTime={100} />
+              <SearchBar />
             </Paper>
@@ -40,2 +50,18 @@ const SearchPage = () => {
           <Grid item xs={3}>
+            <SearchType.Accordion
+              name="Result Type"
+              defaultValue="software-catalog"
+              types={[
+                {
+                  value: 'software-catalog',
+                  name: 'Software Catalog',
+                  icon: <CatalogIcon />,
+                },
+                {
+                  value: 'techdocs',
+                  name: 'Documentation',
+                  icon: <DocsIcon />,
+                },
+              ]}
+            />
             <Paper className={classes.filters}>
@@ -66,2 +92,9 @@ const SearchPage = () => {
                         );
+                      case 'techdocs':
+                        return (
+                          <DocsResultListItem
+                            key={document.location}
+                            result={document}
+                          />
+                        );
                       default:
diff --git a/packages/backend/README.md b/packages/backend/README.md
index 81e0f80..02426ef 100644
--- a/packages/backend/README.md
+++ b/packages/backend/README.md
@@ -38,3 +38,3 @@ the backend without using the auth or sentry features.
 
-The backend starts up on port 7000 per default.
+The backend starts up on port 7007 per default.
 
diff --git a/packages/backend/package.json b/packages/backend/package.json
index bd338cc..63c5c0d 100644
--- a/packages/backend/package.json
+++ b/packages/backend/package.json
@@ -17,17 +17,20 @@
     "app": "0.0.0",
-    "@backstage/backend-common": "^0.9.8",
-    "@backstage/catalog-model": "^0.9.6",
-    "@backstage/catalog-client": "^0.5.0",
-    "@backstage/config": "^0.1.11",
-    "@backstage/plugin-app-backend": "^0.3.18",
-    "@backstage/plugin-auth-backend": "^0.4.6",
-    "@backstage/plugin-catalog-backend": "^0.17.2",
-    "@backstage/plugin-proxy-backend": "^0.2.13",
-    "@backstage/plugin-scaffolder-backend": "^0.15.11",
-    "@backstage/plugin-search-backend": "^0.2.6",
-    "@backstage/plugin-search-backend-node": "^0.4.3",
-    "@backstage/plugin-techdocs-backend": "^0.10.6",
-    "@gitbeaker/node": "^30.2.0",
+    "@backstage/backend-common": "^0.10.4-next.0",
+    "@backstage/backend-tasks": "^0.1.4-next.0",
+    "@backstage/catalog-model": "^0.9.10-next.0",
+    "@backstage/catalog-client": "^0.5.5-next.0",
+    "@backstage/config": "^0.1.13-next.0",
+    "@backstage/plugin-app-backend": "^0.3.22-next.0",
+    "@backstage/plugin-auth-backend": "^0.7.0-next.0",
+    "@backstage/plugin-catalog-backend": "^0.21.0-next.0",
+    "@backstage/plugin-permission-common": "^0.4.0-next.0",
+    "@backstage/plugin-permission-node": "^0.4.0-next.0",
+    "@backstage/plugin-proxy-backend": "^0.2.16-next.0",
+    "@backstage/plugin-scaffolder-backend": "^0.15.21-next.0",
+    "@backstage/plugin-search-backend": "^0.3.1-next.0",
+    "@backstage/plugin-search-backend-node": "^0.4.4",
+    "@backstage/plugin-techdocs-backend": "^0.12.4-next.0",
+    "@gitbeaker/node": "^34.6.0",
     "@octokit/rest": "^18.5.3",
-    "dockerode": "^3.2.1",
+    "dockerode": "^3.3.1",
     "express": "^4.17.1",
@@ -39,4 +42,4 @@
   "devDependencies": {
-    "@backstage/cli": "^0.8.1",
-    "@types/dockerode": "^3.2.1",
+    "@backstage/cli": "^0.12.0-next.0",
+    "@types/dockerode": "^3.3.0",
     "@types/express": "^4.17.6",
diff --git a/packages/backend/src/index.ts b/packages/backend/src/index.ts
index f2b14b2..70bc66b 100644
--- a/packages/backend/src/index.ts
+++ b/packages/backend/src/index.ts
@@ -19,3 +19,5 @@ import {
   UrlReaders,
+  ServerTokenManager,
 } from '@backstage/backend-common';
+import { TaskScheduler } from '@backstage/backend-tasks';
 import { Config } from '@backstage/config';
@@ -29,2 +31,3 @@ import search from './plugins/search';
 import { PluginEnvironment } from './types';
+import { ServerPermissionClient } from '@backstage/plugin-permission-node';
 
@@ -34,7 +37,12 @@ function makeCreateEnv(config: Config) {
   const discovery = SingleHostDiscovery.fromConfig(config);
-
-  root.info(`Created UrlReader ${reader}`);
-
   const cacheManager = CacheManager.fromConfig(config);
   const databaseManager = DatabaseManager.fromConfig(config);
+  const tokenManager = ServerTokenManager.noop();
+  const taskScheduler = TaskScheduler.fromConfig(config);
+  const permissions = ServerPermissionClient.fromConfig(config, {
+    discovery,
+    tokenManager,
+  });
+
+  root.info(`Created UrlReader ${reader}`);
 
@@ -44,3 +52,14 @@ function makeCreateEnv(config: Config) {
     const cache = cacheManager.forPlugin(plugin);
-    return { logger, database, cache, config, reader, discovery };
+    const scheduler = taskScheduler.forPlugin(plugin);
+    return {
+      logger,
+      database,
+      cache,
+      config,
+      reader,
+      discovery,
+      tokenManager,
+      scheduler,
+      permissions,
+    };
   };
@@ -70,2 +89,4 @@ async function main() {
   apiRouter.use('/search', await search(searchEnv));
+
+  // Add backends ABOVE this line; this 404 handler is the catch-all fallback
   apiRouter.use(notFoundHandler());
diff --git a/packages/backend/src/plugins/app.ts b/packages/backend/src/plugins/app.ts
index 07fb04f..14e19a1 100644
--- a/packages/backend/src/plugins/app.ts
+++ b/packages/backend/src/plugins/app.ts
@@ -7,2 +7,3 @@ export default async function createPlugin({
   config,
+  database,
 }: PluginEnvironment): Promise<Router> {
@@ -11,2 +12,3 @@ export default async function createPlugin({
     config,
+    database,
     appPackageName: 'app',
diff --git a/packages/backend/src/plugins/search.ts b/packages/backend/src/plugins/search.ts
index 7fc317d..f23b0c7 100644
--- a/packages/backend/src/plugins/search.ts
+++ b/packages/backend/src/plugins/search.ts
@@ -8,2 +8,3 @@ import { PluginEnvironment } from '../types';
 import { DefaultCatalogCollator } from '@backstage/plugin-catalog-backend';
+import { DefaultTechDocsCollator } from '@backstage/plugin-techdocs-backend';
 
@@ -13,2 +14,3 @@ export default async function createPlugin({
   config,
+  tokenManager,
 }: PluginEnvironment) {
@@ -19,6 +21,19 @@ export default async function createPlugin({
   // Collators are responsible for gathering documents known to plugins. This
-  // particular collator gathers entities from the software catalog.
+  // collator gathers entities from the software catalog.
   indexBuilder.addCollator({
     defaultRefreshIntervalSeconds: 600,
-    collator: DefaultCatalogCollator.fromConfig(config, { discovery }),
+    collator: DefaultCatalogCollator.fromConfig(config, {
+      discovery,
+      tokenManager,
+    }),
+  });
+
+  // collator gathers entities from techdocs.
+  indexBuilder.addCollator({
+    defaultRefreshIntervalSeconds: 600,
+    collator: DefaultTechDocsCollator.fromConfig(config, {
+      discovery,
+      logger,
+      tokenManager,
+    }),
   });
diff --git a/packages/backend/src/plugins/techdocs.ts b/packages/backend/src/plugins/techdocs.ts
index 906d86d..054c64d 100644
--- a/packages/backend/src/plugins/techdocs.ts
+++ b/packages/backend/src/plugins/techdocs.ts
@@ -16,2 +16,3 @@ export default async function createPlugin({
   reader,
+  cache,
 }: PluginEnvironment): Promise<Router> {
@@ -51,2 +52,3 @@ export default async function createPlugin({
     discovery,
+    cache,
   });
diff --git a/packages/backend/src/types.ts b/packages/backend/src/types.ts
index 6c78a2a..0862b0e 100644
--- a/packages/backend/src/types.ts
+++ b/packages/backend/src/types.ts
@@ -6,4 +6,7 @@ import {
   PluginEndpointDiscovery,
+  TokenManager,
   UrlReader,
 } from '@backstage/backend-common';
+import { PluginTaskScheduler } from '@backstage/backend-tasks';
+import { PermissionAuthorizer } from '@backstage/plugin-permission-common';
 
@@ -16,2 +19,5 @@ export type PluginEnvironment = {
   discovery: PluginEndpointDiscovery;
+  tokenManager: TokenManager;
+  scheduler: PluginTaskScheduler;
+  permissions: PermissionAuthorizer;
 };
